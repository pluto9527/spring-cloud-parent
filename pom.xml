<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- 项目说明：这里作为聚合工程的父工程 -->
	<groupId>com.jcfc</groupId>
	<artifactId>spring-cloud-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>	<!--父模块打包类型必须为pom-->

	<name>spring-cloud-parent</name>
	<description>Demo project for Spring Boot</description>

	<!-- 继承说明：这里继承SpringBoot提供的父工程 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
		<relativePath/>
	</parent>

	<!-- 在properties中统一控制依赖包的版本 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<spring-cloud.version>Finchley.SR1</spring-cloud.version>
		<!--<spring-cloud.version>Dalston.SR1</spring-cloud.version>-->
		<mybatis-starter.version>1.3.2</mybatis-starter.version>
		<druid.version>1.1.10</druid.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!--dependencyManagement用于管理依赖版本号-->
	<dependencyManagement>
		<dependencies>
			<!-- 定义SpringCloud版本 -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-starter.version}</version>
			</dependency>

			<!-- 连接池 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!--该插件作用是打一个可运行的包，必须要写在需要打包的项目里。这里的父模块不需要打包运行，所以删掉该插件，只需在启动类所在模块的POM文件：指定打包插件。-->
			<!--<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>-->

			<!-- 配置编译java版本 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- 模块说明：这里声明多个子模块 -->
	<modules>
		<module>spring-cloud-common-api</module>
		<module>spring-cloud-provider-8001</module>
		<module>spring-cloud-provider-8002</module>
		<module>spring-cloud-consumer-9001</module>
		<module>spring-cloud-consumer-feign</module>
		<module>spring-cloud-eureka-server</module>
		<module>spring-cloud-eureka-server2</module>
		<module>spring-cloud-hystrix-dashboard</module>
		<module>spring-cloud-provider-hystrix</module>
		<module>spring-cloud-zuul-gateway</module>
		<module>spring-cloud-config-server</module>
		<module>spring-cloud-config-client</module>
		<module>spring-cloud-config-eureka</module>
		<module>spring-cloud-config-provider</module>
	</modules>

</project>
